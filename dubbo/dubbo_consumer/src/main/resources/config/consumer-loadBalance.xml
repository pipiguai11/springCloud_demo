<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
               http://dubbo.apache.org/schema/dubbo
               http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!--
     负载均衡策略
        算法	                    特性	                    备注
        RandomLoadBalance	        加权随机                    	默认算法，默认权重相同
        RoundRobinLoadBalance	    加权轮询	                    借鉴于 Nginx 的平滑加权轮询算法，默认权重相同，
        LeastActiveLoadBalance	    最少活跃优先 + 加权随机	    背后是能者多劳的思想
        ShortestResponseLoadBalance	最短响应优先 + 加权随机	    更加关注响应速度
        ConsistentHashLoadBalance	一致性 Hash	                确定的入参，确定的提供者，适用于有状态请求
     -->


    <!-- 应用信息配置，对应ApplicationConfig；主要配置的是应用的信息，包括提供者和消费者 -->
    <dubbo:application name="consumer"/>

    <!-- 注册中心配置-->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" check="false"/>

    <!-- 服务消费者引用服务配置，指定引用的接口，以及这个Bean的ID（这个id就是注入的BeanName，如果在消费者中需要手动注入，可以直接使用这个名字，不过一般都是通过@Reference注解注入，它会通过接口类型去判断并注入），还可以定义使用的注册中心或者协议等等，具体的看到官方文档 -->
    <!-- 服务级别 -->
    <dubbo:reference interface="com.lhw.dubbo_api.service.UserService" id="consumrService" loadbalance="roundrobin"/>
    <dubbo:reference interface="com.lhw.dubbo_api.service.AddrService" id="addrService" loadbalance="roundrobin"/>

    <!-- 方法级别 -->
    <!--<dubbo:reference interface="com.lhw.dubbo_api.service.AddrService" id="addrService">
        <dubbo:method name="check" loadbalance="roundrobin"/>
    </dubbo:reference>-->

</beans>