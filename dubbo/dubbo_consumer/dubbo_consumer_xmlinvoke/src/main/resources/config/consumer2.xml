<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
               http://dubbo.apache.org/schema/dubbo
               http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!--
     自己指定引用注入的Bean，通过<dubbo:reference>
     这种方式是将该服务注入到消费者方的spring容器中了，使用的时候需要使用@Resource进行注入，且属性名必须和id对应
     因此，正常使用，都是使用consumer.xml中的扫描的方式。
     -->

    <!-- 应用信息配置，对应ApplicationConfig；主要配置的是应用的信息，包括提供者和消费者 -->
    <dubbo:application name="consumer"/>

    <!-- 注册中心配置，如果同时有多个不同的注册中心，可以声明多个registry标签，并在<dubbo:service>(提供者方)或者<dubbo:reference>(消费者方)中使用registry属性指定，如下 -->
    <dubbo:registry id="local" address="zookeeper://127.0.0.1:2181" />
    <dubbo:registry id="remote" address="zookeeper://192.168.0.126:2181" />

    <!-- 服务消费者引用服务配置，指定引用的接口，以及这个Bean的ID（这个id就是注入的BeanName，如果在消费者中需要手动注入，可以直接使用这个名字），还可以定义使用的注册中心或者协议等等，具体的看到官方文档 -->
    <dubbo:reference interface="com.lhw.dubbo_api.service.UserService" id="consumrService" registry="local"/>
    <dubbo:reference interface="com.lhw.dubbo_api.service.AddrService" id="addrService" registry="local" />

</beans>