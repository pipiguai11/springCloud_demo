<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://dubbo.apache.org/schema/dubbo
           http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!--
     负载均衡策略
        算法	                    特性	                    备注
        RandomLoadBalance	        加权随机                    	默认算法，默认权重相同
        RoundRobinLoadBalance	    加权轮询	                    借鉴于 Nginx 的平滑加权轮询算法，默认权重相同，
        LeastActiveLoadBalance	    最少活跃优先 + 加权随机	    背后是能者多劳的思想
        ShortestResponseLoadBalance	最短响应优先 + 加权随机	    更加关注响应速度
        ConsistentHashLoadBalance	一致性 Hash	                确定的入参，确定的提供者，适用于有状态请求
     -->

    <dubbo:application name="dubbo-provider"/>
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>
    <!--定义通信协议与端口（用dubbo协议再30880端口暴露服务）-->
    <dubbo:protocol name="dubbo" port="30880"/>

    <!-- 服务级别的负载均衡 -->
    <dubbo:service interface="com.lhw.dubbo_api.service.UserService" ref="userServiceImpl" loadbalance="roundrobin"/>
    <bean id="addrServiceImpl" class="com.lhw.xmlregistry.service.AddrServiceImpl"/>
    <dubbo:service interface="com.lhw.dubbo_api.service.AddrService" ref="addrServiceImpl" loadbalance="roundrobin"/>

    <!-- 方法级别的负载均衡 -->
    <!--<dubbo:service interface="com.lhw.dubbo_api.service.AddrService" ref="addrServiceImpl" loadbalance="roundrobin">
        <dubbo:method name="check" loadbalance="roundrobin"/>
    </dubbo:service>-->

</beans>