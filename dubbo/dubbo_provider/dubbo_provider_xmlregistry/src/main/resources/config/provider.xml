<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://dubbo.apache.org/schema/dubbo
           http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!--
    通过包扫描服务的方式注册（最方便的方式，但是没有单个服务注册那么灵活）
     -->

    <!--定义当前提供方的应用信息，用于计算依赖关系-->
    <dubbo:application name="dubbo-provider"/>

    <!--注册中心暴露的服务地址（如果是用zookeeper的话就写以下这个，如果是其他的注册中心，去官网看吧）-->
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>

    <!--定义通信协议与端口（用dubbo协议再30880端口暴露服务）-->
    <dubbo:protocol name="dubbo" port="30880"/>

    <!--定义注解扫描指定路径下的所有bean，当作服务，除此之外，还可以用<dubbo:service>一个一个的配置服务（前提是要配置好对应的实现类，可以直接通过注解将对应实现类注入容器，或者在这个xml配置类中通过<bean>去配置，最后都是需要通过beanID去指定引用的）-->
    <dubbo:annotation package="com.lhw.provider.service"/>

    <!-- 服务提供者缺省配置，可以指定超时时间、自定义异常处理过滤器等等，具体的看到官方文档 -->
    <dubbo:provider filter="dubboExceptionFilter,-exception" timeout="50000"/>

</beans>