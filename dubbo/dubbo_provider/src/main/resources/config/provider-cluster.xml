<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://dubbo.apache.org/schema/dubbo
           http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!--
     集群容错（消费方）
         Failover Cluster（缺省）
             失败自动切换，当出现失败，重试其它服务器。通常用于读操作，但重试会带来更长延迟。可通过 retries="2" 来设置重试次数(不含第一次)。

         Failfast Cluster
             快速失败，只发起一次调用，失败立即报错。通常用于非幂等性的写操作，比如新增记录。

         Failsafe Cluster
             失败安全，出现异常时，直接忽略。通常用于写入审计日志等操作。

         Failback Cluster
             失败自动恢复，后台记录失败请求，定时重发。通常用于消息通知操作。

         Forking Cluster
             并行调用多个服务器，只要一个成功即返回。通常用于实时性要求较高的读操作，但需要浪费更多服务资源。可通过 forks="2" 来设置最大并行数。

         Broadcast Cluster
             广播调用所有提供者，逐个调用，任意一台报错则报错。通常用于通知所有提供者更新缓存或日志等本地资源信息。

         Available Cluster
            调用目前可用的实例（只调用一个），如果当前没有可用的实例，则抛出异常。通常用于不需要负载均衡的场景。

         Mergeable Cluster
            将集群中的调用结果聚合起来返回结果，通常和group一起配合使用。通过分组对结果进行聚合并返回聚合后的结果，比如菜单服务，用group区分同一接口的多种实现，现在消费方需从每种group中调用一次并返回结果，对结果进行合并之后返回，这样就可以实现聚合菜单项。
     -->

    <dubbo:application name="dubbo-provider"/>
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>
    <!--定义通信协议与端口（用dubbo协议再30880端口暴露服务）-->
    <dubbo:protocol name="dubbo" port="30880"/>

    <!-- 声明需要暴露的服务接口，这里直接引用spring容器中的Bean（userServiceImpl），前提是它事先被初始化了（这里是通过@Component注解注入了），直接ref它的BeanName即可 -->
    <dubbo:service interface="com.lhw.dubbo_api.service.UserService" ref="userServiceImpl" cluster="failfast"/>

    <!-- 如果在启动时，没有事先将其注入到容器中，启动会报错，这时可以在配置文件中配置，先通过<bean>标签配置一个bean，指向该实现类，然后<dubbo:service>的ref再引用到bean的id即可 -->
    <bean id="addrServiceImpl" class="com.lhw.provider.service.AddrServiceImpl"/>
    <dubbo:service interface="com.lhw.dubbo_api.service.AddrService" ref="addrServiceImpl" cluster="failfast"/>

</beans>